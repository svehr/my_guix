# ~~~~ prefix
# prefix key
unbind C-b
# set -g prefix C-'\'
# bind C-'\' send-prefix
set -g prefix C-Space
bind C-Space send-prefix

# ~~~~ options
# set-option
#     -g -> global
#     -w -> windwow
#     -s -> server
#     else -> session

# enable utf-8
# set-option -g utf8 on
# removed since tmux 2.2
set-option -g default-command "${SHELL}" # tmux starts login shell per default -> problem with ~/.profile / ~/.zprofile stuff

set-option -g base-index 1      # first window starts with number 1
set-option -g pane-base-index 1 # panes start with 1
set-option -g detach-on-destroy on

set-option -g history-limit 50000

# the time how long tmux messages are displayed (default: 750)
set-option -g display-time 4000
# refresh status-left and status-right more often (defualt: 15)
set-option -g status-interval 5
# enable focuse events
set-option -g focus-events on


# set $TERM value
set-option -g default-terminal "screen-256color"

# start NON-LOGIN shell on splits
set -g default-command "${SHELL}"

set-option -g mode-keys vi
set-option -g escape-time 0 # default: 500
set-option -g repeat-time 250   # milliseconds

# resize windows according to smallest session that actually watches window
set-window-option -g aggressive-resize on

# ~~ status line config
# enable utf-8 in status bar
# set-option -g status-utf8 on
# removed since tmux 2.2

set -g status-style "bg=colour234"
set -g status-left "#[fg=colour235,bg=colour252,bold] [#S] #[fg=colour252,bg=colour238,bold] #W/#P #[bg=colour234] :: "
set -g status-left-length  70
set -g window-status-format "#[fg=white,bg=colour234]#F #I #W"
set -g window-status-current-format "#[fg=red,bg=colour234,bold,noreverse]< #F #I #W >"
set -g status-right "#h #[bold] %H:%M %d-%m-%Y"
set -g status-right-length 30
# set -g window-status-style "fg=red,bg=red" # ??
set -g window-status-separator " :: "
set -g clock-mode-style 24

# ~~~~ keybindings

# ~~~ movement
# ~ panes
bind-key -r h   select-pane -L
bind-key -r j   select-pane -D
bind-key -r k   select-pane -U
bind-key -r l   select-pane -R

# ~ windows
bind-key -r n next-window
bind-key -r p previous-window


# ~~~ swapping
# ~ windows
bind-key -r M-n swap-window -t +1
bind-key -r M-p swap-window -t -1

# ~ panes
# bind-key -r M-h swap-pane   -t :.{left-of}
# bind-key -r M-j swap-pane   -t :.{up-of}
# bind-key -r M-k swap-pane   -t :.{down-of}
# bind-key -r M-l swap-pane   -t :.{right-of}

# ~~~ resizing panes
bind-key -r  H  resize-pane -L "5"
bind-key -r  J  resize-pane -D "5"
bind-key -r  K  resize-pane -U "5"
bind-key -r  L  resize-pane -R "5"


# ~~~ spliting panes
# default keys adapted for keeping current path
bind-key % split-window -c "#{pane_current_path}" -h
bind-key '"' split-window -c "#{pane_current_path}" -v
# h,j,k,l like in vim
bind-key C-h split-window -c "#{pane_current_path}" -hb
bind-key C-j split-window -c "#{pane_current_path}" -v
bind-key C-k split-window -c "#{pane_current_path}" -vb
bind-key C-l split-window -c "#{pane_current_path}" -h


# ~~~ new window
# new window at the end
bind-key c   new-window    -c "#{pane_current_path}"
# create window in front of current window
bind-key C-p new-window -a -c "#{pane_current_path}" -t ":-"
# create window after       current window
bind-key C-n new-window -a -c "#{pane_current_path}"

# ~~~ copying
#   * vimified
#   * xclip support
unbind [
bind-key v copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
# disable terminal clipboard
# [st length limit inhibits xclip]
# see: https://github.com/tmux/tmux/issues/1119
set-option -g set-clipboard off
# copies selection to xlcip AND tmux buffer
bind -T copy-mode-vi y send -X copy-pipe "xclip -i -selection clipboard"
# NOTE: following line causes problem with tmux-copycat
#       (see https://github.com/tmux-plugins/tmux-copycat/issues/40)
bind -T copy-mode-vi Escape send -X cancel
# bind b list-buffers  # list paster buffers
bind Y choose-buffer # choose which buffer to paste from
bind M-y choose-buffer # choose which buffer to paste from
# if xclip is installed use xclip selection; else tmux paste-buffer
bind y run-shell '\
if  [ -n "$DISPLAY" ] && command -v xclip &> /dev/null; then \
    tmux set-buffer -b xclip "$(xclip -o -selection clipboard)"; \
    tmux paste-buffer -b xclip; \
else \
    tmux paste-buffer; \
fi'

# ~~~ start applications
# NOTE: run-shell does not execute in underlying shell process
#       but shell is expanded according to FORMATS section in man 1 tmux
bind e run-shell '\
if  [ -n "$DISPLAY" ]; then \
    emacsclient -nc "#{pane_current_path}"; \
else \
    emacsclient -nw "#{pane_current_path}"; \
fi'

# ~~~ misc
# reload configuration
bind R source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'


# ~~~ TEST
# bind < split-window -h \; select-pane 'kill-pane ; join-pane -hs %%'
